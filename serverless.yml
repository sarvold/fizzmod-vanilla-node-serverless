service: FizzBurgerChallenge

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 192
  stage: ${opt:stage, 'local'}
  region: ${opt:region, 'us-east-1'}
  endpointType: REGIONAL
  apiName: FizzBurgerChallenge API
  environment:
    NODE_ENV: ${self:provider.stage}
    MONGODB_URI: mongodb://localhost:27017/fizz-burger

custom:
  serverless-offline:
    port: 4000
    printOutput: true
    cacheInvalidationRegex: 'node_modules/'

functions:
  CreateProduct:
    handler: src/handlers/products/create.handler
    description: Create a product.
    events:
      - http:
          integration: lambda-proxy
          path: /products
          method: post
          cors: true
  ReadProduct:
    handler: src/handlers/products/read.handler
    description: Get a single product by id.
    events:
      - http:
          integration: lambda-proxy
          path: /products/{id}
          method: get
          cors: true
  UpdateProduct:
    handler: src/handlers/products/update.handler
    description: Update a product.
    events:
      - http:
          integration: lambda-proxy
          path: /products/{id}
          method: put
          cors: true
  DeleteProduct:
    handler: src/handlers/products/delete.handler
    description: Delete a product by id.
    events:
      - http:
          integration: lambda-proxy
          path: /products/{id}
          method: delete
          cors: true
  ListProducts:
    handler: src/handlers/products/list.handler
    description: Get all products.
    events:
      - http:
          integration: lambda-proxy
          path: /products
          method: get
          cors: true

plugins:
  - serverless-offline
